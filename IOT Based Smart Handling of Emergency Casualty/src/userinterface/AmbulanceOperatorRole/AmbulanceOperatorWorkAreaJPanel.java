/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AmbulanceOperatorRole;

import Business.Area.Area;
import Business.EcoSystem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EHSWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author test
 */
public class AmbulanceOperatorWorkAreaJPanel extends javax.swing.JPanel {
private JPanel UserProcessContainer ;
private UserAccount userAccount;
private Organization organization;
private Area area;
private EcoSystem system;
    /**
     * Creates new form AmbulanceOperatorWorkAreaJPanel
     */
    public AmbulanceOperatorWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization,Area area,EcoSystem system) {
        initComponents();
        this.UserProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.area = area;
        this.system = system;
        populateRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Area", "Longitude", "Latitude", "Impact", "Collision With", "Date", "Status", "Receiver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        jButton3.setText("Close Request");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel1.setText("Requests Send By EHS Admin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 997, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnProcess)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel1)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcess)
                    .addComponent(jButton3))
                .addContainerGap(214, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
       if(selectedRow < 0)
       {
       JOptionPane.showMessageDialog(null,"Please select a row from table", "warning", JOptionPane.WARNING_MESSAGE);
       return;
       }
       else 
       {
         EHSWorkRequest ehs = (EHSWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
         if(!ehs.getStatus().equalsIgnoreCase("Ambulance Reached"))
         {
        ProcessRequestJPanel processRequestJPanel = new ProcessRequestJPanel(UserProcessContainer,userAccount, organization,area,ehs,system);
        UserProcessContainer.add("processRequestJPanel", processRequestJPanel);
        CardLayout layout = (CardLayout) UserProcessContainer.getLayout();
        layout.next(UserProcessContainer);
       }
         else
         {
        // btnProcess.setEnabled(false);
         JOptionPane.showMessageDialog(null,"The request is already processed","Warning",JOptionPane.INFORMATION_MESSAGE);
         return;
         }
       }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
      int selectedRow = workRequestJTable.getSelectedRow();
       if(selectedRow < 0)
       {
       JOptionPane.showMessageDialog(null,"Please select a row from table", "warning", JOptionPane.WARNING_MESSAGE);
       return;
       }
       else 
       {
       EHSWorkRequest ehs = (EHSWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);   
       if(ehs.getStatus().equalsIgnoreCase("Ambulance Reached"))
       {
           ehs.setStatus("Case closed");
           ehs.getSender().getEmployee().setAvailability("Available");
        JOptionPane.showMessageDialog(null,"The request has been closed successfully","Information",JOptionPane.INFORMATION_MESSAGE);
           populateRequests();
       }
       else
       {
       JOptionPane.showMessageDialog(null,"The request cannot be closed","Warning",JOptionPane.WARNING_MESSAGE);
       return;
       }
       }
    }//GEN-LAST:event_jButton3ActionPerformed
    public void populateRequests()
    {
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            EHSWorkRequest workrequest = (EHSWorkRequest) request;
            Object[] row = new Object[9];
            row[0] = workrequest;
            row[1] = workrequest.getLocation();
            row[2] = workrequest.getLongitude();
            row[3] = workrequest.getLatitude();
            row[4] = workrequest.getImpact();
            row[5] = workrequest.getCollisionWith();
            row[6] = workrequest.getRequestDate();
            row[7] = workrequest.getStatus();
            row[8] = workrequest.getReceiver();
            model.addRow(row);
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
