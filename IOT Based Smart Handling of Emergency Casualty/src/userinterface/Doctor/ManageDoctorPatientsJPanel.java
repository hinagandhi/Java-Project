/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Doctor;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author test
 */
public class ManageDoctorPatientsJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
private UserAccount userAccount;
private Organization organization;
private Enterprise enterprise;
private HospitalWorkRequest req;
    /**
     * Creates new form ManageDoctorPatientsJPanel
     */
    public ManageDoctorPatientsJPanel(JPanel userProcessContainer,UserAccount userAccount,Organization organization,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        populateRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "PatientID", "PatientName", "Status", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jButton1.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jButton2.setText("Monitor Patient");
        jButton2.setToolTipText("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jButton3.setText("Discharge Patient");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel1.setText("Manage Patients");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2)
                        .addGap(50, 50, 50)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(246, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void populateRequests()
    {
     DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
     model.setRowCount(0);
        
    for(WorkRequest workRequest: userAccount.getWorkQueue().getWorkRequestList())
    {
    HospitalWorkRequest hos = (HospitalWorkRequest) workRequest;
    Object[] row = new Object[5];
    row[0] = hos;
    row[1] = hos.getPatient().getPatientID();
    row[2] = hos.getPerson().getFirstName();
    row[3] = hos.getStatus();
    row[4] = hos.getRequestDate();
    model.addRow(row);
    }
    }
 /*  public class chart extends ApplicationFrame
   {

       public chart( String applicationTitle , String chartTitle ) {
         super(applicationTitle);
       } 
       JFreeChart lineChart = ChartFactory.createLineChart("Heart Rate", "Years","Number of Schools", createDataset(req), PlotOrientation.HORIZONTAL, true,true,false );
       ChartPanel chartPanel = new ChartPanel( lineChart );
     //  chartPanel.setPreferredSize( new java.awt.Dimension( 560 , 367 ) );
     //  chartPanel.( chartPanel );
   }*/
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row from table", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
       HospitalWorkRequest hosrequest = (HospitalWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if(hosrequest.getStatus().equalsIgnoreCase("Patient Reached")|| hosrequest.getStatus().equalsIgnoreCase("Patient being monitored"))
        {
            hosrequest.setStatus("Patient being monitored");
            populateRequests();
       ViewCurrentReportJPanel viewcurrentreportJPanel = new ViewCurrentReportJPanel(userProcessContainer,hosrequest,enterprise);
       userProcessContainer.add("viewcurrentreportJPanel", viewcurrentreportJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        else
        {
        JOptionPane.showMessageDialog(null,"You cannot monitor patient","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
         
      //  Component[] componentArray = userProcessContainer.getComponents();
      //  Component component = componentArray[(componentArray.length) - 3];
      // AmbulanceOperatorWorkAreaJPanel ambulanceOperator = (AmbulanceOperatorWorkAreaJPanel) component;
      //  ambulanceOperator. populateRequests();
       CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
          
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row from table", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else
        {
            HospitalWorkRequest hosrequest = (HospitalWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
           if(hosrequest.getStatus().equalsIgnoreCase("Patient being Monitored"))
           {
               Organization org = null;
            int dialogButton = JOptionPane.YES_NO_OPTION;
          //  int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to create an online account of patient", "Warning", dialogButton);
         int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to release patient", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION) {
          hosrequest.getPatient().getPerson().setIsPatient("No");
          Date date = new Date();
          hosrequest.setResolveDate(date);
          hosrequest.setStatus("Patient Released");
          populateRequests();
            }
    //      ReceptionistDoctorWorkRequest docreq = new ReceptionistDoctorWorkRequest();
     /*     for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList())
          {
          if(organization instanceof ReceptionistOrganization)
          {
          org = organization;
          break;
          }
          }
          docreq.setMessage("Create online Account");
          docreq.setPatient(hosrequest.getPatient());
          docreq.setPerson(hosrequest.getPerson());
          docreq.setStatus("Pending Creation Request");
          docreq.setSender(userAccount);
          org.getWorkQueue().getWorkRequestList().add(docreq);
          JOptionPane.showMessageDialog(null,"The request to create online account has been sent to Receptionist","Information",JOptionPane.INFORMATION_MESSAGE);
        //RequestSendToReceptionistJPanel requestSendToReceptionistJPanel = new RequestSendToReceptionistJPanel(userProcessContainer,hosrequest,enterprise);
       //userProcessContainer.add("requestSendToReceptionistJPanel", requestSendToReceptionistJPanel);
       // CardLayout layout = (CardLayout) userProcessContainer.getLayout();
       // layout.next(userProcessContainer);
            }
            
            else
            {
          //  hosrequest.getPatient().getPerson().setIsPatient("No");
          //  hosrequest.setStatus("Patient Released");
        //    JOptionPane.showMessageDialog(null,"The patient has been released from hospital","Information",JOptionPane.INFORMATION_MESSAGE);
            
            }
        }*/
           }
           else
           {
               JOptionPane.showMessageDialog(null,"You cannot release patient","Warninh",JOptionPane.WARNING_MESSAGE);
               
           }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
