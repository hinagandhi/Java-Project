/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Doctor;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author test
 */
public class ViewReceptionistRequestsJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
private UserAccount  userAccount;
private Organization organization;
private Enterprise enterprise;
    /**
     * Creates new form ViewReceptionistRequestsJPanel
     */
    public ViewReceptionistRequestsJPanel(JPanel userProcessContainer,UserAccount userAccount,Organization organization,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        populatePatientRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "PatientID", "Status", "Patient Arrival Date", "Patient Release Date", "Receiver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jButton1.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("OCR A Extended", 0, 14)); // NOI18N
        jButton2.setText("View Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel1.setText("Accident Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(49, 49, 49)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(237, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       int selectedRow = workRequestJTable.getSelectedRow();
       if(selectedRow < 0)
       {
       JOptionPane.showMessageDialog(null,"Please select a row from table", "warning", JOptionPane.WARNING_MESSAGE);
       return;
       }
       HospitalWorkRequest hosrequest = (HospitalWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
     //  System.out.println(ehs.getSender().getEmployee().getName());
       if(!hosrequest.getStatus().equalsIgnoreCase("Patient Released"))
       {
        ViewPatientDetailsJPanel viewpatientdetailsJPanel = new ViewPatientDetailsJPanel(userProcessContainer, userAccount,organization,hosrequest,enterprise);
       userProcessContainer.add("viewpatientdetailsJPanel", viewpatientdetailsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
       }
       else
       {
       JOptionPane.showMessageDialog(null,"The patient has been released from hospital","Warning",JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
         
      //  Component[] componentArray = userProcessContainer.getComponents();
      //  Component component = componentArray[(componentArray.length) - 3];
      // AmbulanceOperatorWorkAreaJPanel ambulanceOperator = (AmbulanceOperatorWorkAreaJPanel) component;
      //  ambulanceOperator. populateRequests();
       CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed
      public void populatePatientRequests()
     {
      DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
         HospitalEnterprise enterprise1 = (HospitalEnterprise) enterprise;
          
             //HospitalEnterprise enterprise1 = (HospitalEnterprise) enterprise;
 
         Organization org = null;
         for(Organization organization: enterprise1.getOrganizationDirectory().getOrganizationList())
         {
         if(organization instanceof DoctorOrganization)
             org = organization;
         }
        for(WorkRequest request : org.getWorkQueue().getWorkRequestList()){
       for(Patient p2: enterprise1.getPatientDirectory().getPatientList() )
     {
      //   EHSWorkRequest ehs = (EHSWorkRequest) request;
           HospitalWorkRequest workrequest = (HospitalWorkRequest) request;
    if(!workrequest.getPerson().getPd().getPatientList().isEmpty())
     {
    for(Patient patient : workrequest.getPerson().getPd().getPatientList())
    {
        System.out.println(patient.getPatientID());
    if(patient.getPatientID().equalsIgnoreCase(p2.getPatientID()))
    {
           // HospitalWorkRequest workrequest = (HospitalWorkRequest) request;
            Object[] row = new Object[6];
            row[0] = workrequest;
            row[1] = patient.getPatientID();
            row[2] = workrequest.getStatus();
            row[3] = workrequest.getRequestDate();
            row[4] = workrequest.getResolveDate();
            if(workrequest.getReceiver()!= null)
            row[5] = workrequest.getReceiver();
            else
            row[5] = "";
            model.addRow(row);
    }
        }
     }
     }
        }
     }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
